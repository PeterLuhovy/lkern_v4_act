/*
 * ================================================================
 * FILE: en.ts
 * PATH: packages/config/src/translations/en.ts
 * DESCRIPTION: English translations for L-KERN v4
 * VERSION: v1.0.0
 * UPDATED: 2025-10-13
 * ================================================================
 */

import type { TranslationKeys } from './types';

export const en: TranslationKeys = {
  common: {
    welcome: 'Welcome',
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    close: 'Close',
    search: 'Search',
    filter: 'Filter',
    export: 'Export',
    import: 'Import',
    refresh: 'Refresh',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    confirm: 'Confirm',
    yes: 'Yes',
    no: 'No',
    submit: 'Submit',
    back: 'Back',
    next: 'Next',
  },
  dashboard: {
    title: 'Dashboard',
    welcome: 'Welcome to L-KERN v4',
    theme: 'Theme',
    language: 'Language',
    current: 'Current',
    toggleTheme: 'Toggle Theme',
    toggleLanguage: 'Toggle Language',
    pages: 'Pages',
    testingDescription: 'Test all UI components - Forms, Badge, Card, EmptyState, Spinner, Utility Functions',
    keyboardShortcuts: 'Keyboard Shortcuts',
  },
  contacts: {
    title: 'Contacts',
    add: 'Add Contact',
    edit: 'Edit Contact',
  },
  orders: {
    title: 'Orders',
    add: 'Add Order',
    edit: 'Edit Order',
  },
  components: {
    buttons: {
      primary: 'Primary',
      secondary: 'Secondary',
      danger: 'Danger',
      ghost: 'Ghost',
      success: 'Success',
      small: 'Small',
      medium: 'Medium',
      large: 'Large',
    },
    badge: {
      neutral: 'Neutral',
      success: 'Success',
      warning: 'Warning',
      error: 'Error',
      info: 'Info',
      small: 'Small',
      medium: 'Medium',
      large: 'Large',
      withDot: 'With Dot',
      active: 'Active',
      pending: 'Pending',
      failed: 'Failed',
      processing: 'Processing',
      demo: {
        title: 'Badge Component Demo',
        variants: 'Variants (Medium Size)',
        sizes: 'Sizes (Success Variant)',
        dotIndicator: 'With Dot Indicator',
        allCombinations: 'All Size Combinations',
        useCases: 'Real-World Use Cases',
        orderStatuses: 'Order Statuses',
        userRoles: 'User Roles',
        stockLevels: 'Stock Levels',
        newOrder: 'New Order',
        inProgress: 'In Progress',
        completed: 'Completed',
        cancelled: 'Cancelled',
        admin: 'Admin',
        manager: 'Manager',
        user: 'User',
        inStock: 'In Stock',
        lowStock: 'Low Stock',
        outOfStock: 'Out of Stock',
      },
    },
    testing: {
      title: 'Component Testing Page',
      subtitle: 'Test all @l-kern/ui-components',
      backToHome: '‚Üê Back to Home',
      backToDashboard: '‚Üê Back to Dashboard',
      dashboard: 'Testing Dashboard',
      dashboardSubtitle: 'Select a component to test',
      dashboardHint: 'All components are fully responsive and support dark mode',
      formComponents: 'Form Components',
      formComponentsDescription: 'Test Button, Input, Select, Checkbox, Radio and FormField components',
      badgeDescription: 'Test all Badge component variants and sizes',
      cardDescription: 'Test Card component with different variants and content',
      emptyStateDescription: 'Test EmptyState component for empty states',
      spinnerDescription: 'Test Spinner/Loader component',
      utilityFunctions: 'Utility Functions',
      utilityDescription: 'Test phone, email and date utility functions',
      wizardDescription: 'Test Modal wizard system (Centered, Drawer, Fullscreen)',
      variants: 'Variants:',
      sizes: 'Sizes:',
      states: 'States:',
      withDot: 'With Dot:',
      formExample: 'FormField - Complete Form Example',
      withLabel: 'With Label:',
      customColor: 'Custom Color:',
      navigationButtons: 'Navigation Buttons:',
      disabled: 'Disabled',
      fullWidth: 'Full Width',
      withError: 'With error',
      withHelperText: 'With helper text',
      enterYourName: 'Enter your name',
      pleaseWait: 'Please wait...',
      basicCheckbox: 'Basic checkbox',
      checkedByDefault: 'Checked by default',
      spinnerTitle: 'Spinner Component',
      xlarge: 'Extra Large',
      processingRequest: 'Processing your request...',
      customColors: 'Custom Colors',
      primary: 'Primary',
      useCases: 'Use Cases',
      loadingData: 'Loading Data',
      loadingContacts: 'Loading contacts...',
      centeredContainer: 'Centered in Container',
      inlineText: 'Inline with Text',
      fullPageLoader: 'Full Page Loader',
      loadingPage: 'Loading page...',
      badgeTitle: 'Badge Component',
      cardTitle: 'Card Component',
      emptyStateTitle: 'EmptyState Component',
      wizardTitle: 'Wizard Modal Demo [TEST]',
      nestedContentExamples: 'Nested Content Examples',
      gridLayoutExample: 'Grid Layout Example',
      size: 'Size',
    },
    card: {
      defaultVariant: 'Default Variant',
      defaultDescription: 'Standard card with subtle shadow',
      outlinedVariant: 'Outlined Variant',
      outlinedDescription: 'Card with visible border',
      elevatedVariant: 'Elevated Variant',
      elevatedDescription: 'Card with prominent shadow for emphasis',
      clickableTitle: 'Interactive:',
      clickableCard: 'Clickable Card',
      clickableDescription: 'Click this card to trigger an action',
      clickedMessage: 'Card was clicked!',
      elevatedClickableCard: 'Elevated Clickable Card',
      elevatedClickableDescription: 'Hover effect with elevated shadow',
      elevatedClickedMessage: 'Elevated card was clicked!',
      cardWithList: 'Card with List',
      cardWithButtons: 'Card with Buttons',
      item: 'Item',
      cardNumber: 'Card {{number}}',
      exampleCardInGrid: 'Example card in grid layout',
    },
    emptyState: {
      noContacts: 'No contacts yet',
      noContactsDescription: 'Start by adding your first contact to the system',
      noOrders: 'No orders yet',
      noOrdersDescription: 'When you create an order, it will appear here',
      noResults: 'No results found',
      noResultsDescription: 'Try adjusting your search query or filters',
      noData: 'No data',
      noDataDescription: 'There is currently no data available',
      noSearchResults: 'No search results',
      noSearchResultsDescription: 'Try adjusting your search criteria or filters.',
      clearFilters: 'Clear Filters',
      emptyList: 'Empty List',
      noItemsYet: 'No items yet',
      noItemsYetDescription: 'Start by creating your first item.',
      createItem: 'Create Item',
      noContactsFound: 'No contacts found',
      noContactsFoundDescription: 'Add your first contact to start managing customers.',
      errorState: 'Error State',
      somethingWentWrong: 'Something went wrong',
      somethingWentWrongDescription: 'Failed to load your data. Please try again.',
      retry: 'Retry',
      noPermission: 'No Permission',
      accessDenied: 'Access Denied',
      accessDeniedDescription: 'You do not have permission to view this content.',
      withoutActionButton: 'Without Action Button',
      allDone: 'All Done!',
      allDoneDescription: 'You have completed all tasks.',
    },
    wizard: {
      testPageDescription: 'Test page for 3 wizard modal variants: Centered, Drawer and Fullscreen.',
      centeredModal: 'Centered Modal',
      centeredDescription: 'Classic modal in the center of screen with dark background. Suitable for short forms.',
      drawerModal: 'Drawer Modal',
      recommended: 'RECOMMENDED',
      drawerDescription: 'Side panel sliding from the right. Preserves context of original page. Ideal for contact forms.',
      fullscreenModal: 'Fullscreen Modal',
      fullscreenDescription: 'Full screen without distractions. Suitable for very long forms or mobile devices.',
      width: 'Width',
      position: 'Position',
      animation: 'Animation',
      center: 'Center',
      scaleIn: 'Scale in',
      rightSide: 'Right side',
      slideIn: 'Slide in',
      fullViewport: 'Full viewport',
      fadeIn: 'Fade in',
      openCentered: 'Open Centered Modal',
      openDrawer: 'Open Drawer Modal',
      openFullscreen: 'Open Fullscreen Modal',
      wizardData: 'Wizard Data',
      completed: 'Completed',
      systemInfo: 'Wizard System Information',
      wizardComponent: 'Wizard component',
      consists6Steps: 'consists of 6 steps:',
      step1: 'Contact Type (Company / Individual)',
      step2: 'Basic Information (Name, Company ID, Tax ID / First Name, Last Name)',
      step3: 'Contact Information (Email, Phone, Web)',
      step4: 'Address (Street, City, ZIP, Country)',
      step5: 'Bank Information (IBAN, SWIFT, Bank Name)',
      step6: 'Summary (Overview of all data + notes)',
      technologies: 'Technologies',
      component: 'component',
      tech1: 'Centralized wizard state management',
      tech2: '3 variants (centered, drawer, fullscreen)',
      tech3: 'Dots/Bar/Numbers progress indicator',
      tech4: 'Back/Next/Save buttons',
    },
    modalV3: {
      pageTitle: 'Modal v3.0.0 - Enhanced Features Testing',
      test1: {
        title: 'üéØ Test 1: Drag & Drop',
        description: 'Click header and drag modal around. Header cursor should show grab icon.',
        buttonLabel: 'Open Draggable Modal',
        modalTitle: 'üñ±Ô∏è Drag Me!',
        instructionsHeading: 'Instructions:',
        instruction1: 'Click and hold the header',
        instruction2: 'Drag the modal to a new position',
        instruction3: 'Release to drop',
        instruction4: 'Modal resets position when reopened',
      },
      test2: {
        title: 'ü™Ü Test 2: Nested Modals',
        description: 'ESC closes only topmost modal. Auto z-index via modalStack.',
        buttonLabel: 'Open Parent Modal',
        parentModalTitle: 'üë® Parent Modal',
        childModalTitle: 'üë∂ Child Modal (Nested)',
        parentContent: 'This is the parent modal. Click button below to open nested child modal.',
        parentHint: 'üîë Press ESC when child is open - only child should close!',
        childButtonLabel: 'Open Child Modal',
        childTestHeading: 'üß™ Test ESC Key:',
        childInstruction1: 'Press ESC ‚Üí Child closes, Parent stays open ‚úÖ',
        childInstruction2: 'Child has higher z-index (auto from modalStack) ‚úÖ',
        childInstruction3: 'Backdrop padding increased (80px vs 64px) ‚úÖ',
        childHint: 'modalId: "child" | parentModalId: "parent"',
      },
      test3: {
        title: 'üìê Test 3: Enhanced Footer',
        description: 'Left slot (delete button) + Right slot (cancel/save) + error message.',
        buttonLabel: 'Open Enhanced Footer',
        modalTitle: 'üíæ Enhanced Footer Layout',
        testValidationHeading: 'Test validation error:',
        placeholder: 'Type something and save (empty triggers error)',
        instruction1: 'Delete button on left ‚úÖ',
        instruction2: 'Cancel + Save buttons on right ‚úÖ',
        instruction3: 'Error message appears on left (try saving empty input) ‚úÖ',
      },
      test4: {
        title: '‚¨ÜÔ∏è Test 4: Top Alignment',
        description: 'Modal positioned at top of viewport instead of center.',
        buttonLabel: 'Open Top Modal',
        modalTitle: '‚¨ÜÔ∏è Top Aligned Modal',
        content: 'This modal is aligned to the top of the viewport (alignment="top").',
      },
      test5: {
        title: '‚¨áÔ∏è Test 5: Bottom Alignment',
        description: 'Modal positioned at bottom of viewport.',
        buttonLabel: 'Open Bottom Modal',
        modalTitle: '‚¨áÔ∏è Bottom Aligned Modal',
        content: 'This modal is aligned to the bottom of the viewport (alignment="bottom").',
      },
      test6: {
        title: '‚å®Ô∏è Test 6: Submit on Enter',
        description: 'Press Enter in input to submit (not in textarea).',
        buttonLabel: 'Open Submit Modal',
        modalTitle: '‚å®Ô∏è Submit on Enter Test',
        testHeading: 'üß™ Test Enter Key:',
        placeholder: 'Type here and press Enter to submit',
        hint: 'submitOnEnter=true | onSubmit callback set',
      },
      test7: {
        title: 'üö´ Test 7: Disable Drag',
        description: 'Modal with dragging disabled. Header cursor is default.',
        buttonLabel: 'Open Non-Draggable Modal',
        modalTitle: 'üö´ Dragging Disabled',
        content: 'This modal cannot be dragged (disableDrag=true). Header cursor is default, not grab.',
      },
      featureSummary: {
        title: '‚úÖ Modal v3.0.0 Features Summary',
        dragDrop: 'Drag & Drop:',
        dragDropDesc: 'Modal draggable by header (disableDrag prop to disable)',
        enhancedKeyboard: 'Enhanced Keyboard:',
        enhancedKeyboardDesc: 'ESC closes only topmost modal, Enter submits (submitOnEnter prop)',
        nestedModals: 'Nested Modals:',
        nestedModalsDesc: 'Full modalStack integration with auto z-index calculation',
        enhancedFooter: 'Enhanced Footer:',
        enhancedFooterDesc: 'ModalFooterConfig with left/right slots + error message',
        alignment: 'Alignment:',
        alignmentDesc: 'top/center/bottom positioning (alignment prop)',
        paddingOverride: 'Padding Override:',
        paddingOverrideDesc: 'Custom overlay padding for nested modals (overlayPadding prop)',
        modalStack: 'modalStack:',
        modalStackDesc: 'Automatic parent-child relationship tracking and cleanup',
      },
      common: {
        confirmDelete: 'Are you sure you want to delete?',
        deleted: 'Deleted!',
        submitted: 'Submitted',
        inputEmptyError: 'Input cannot be empty',
      },
    },
  },
  forms: {
    username: 'Username',
    email: 'Email',
    password: 'Password',
    country: 'Country',
    bio: 'Bio',
    placeholders: {
      username: 'Enter username',
      email: 'Enter email',
      password: 'Enter password',
      country: 'Choose a country',
      bio: 'Tell us about yourself...',
      basicInput: 'Basic input...',
    },
    helperTexts: {
      emailPrivacy: "We'll never share your email",
      selectCountry: 'Select your country',
      bioOptional: 'Optional',
    },
    errors: {
      passwordLength: 'Password must be at least 8 characters',
      required: 'This field is required',
    },
    checkboxes: {
      agreeTerms: 'I agree to the terms and conditions',
      subscribeNewsletter: 'Subscribe to newsletter',
      subscribeHelper: 'Get weekly updates',
      requiredField: 'Required field',
      requiredError: 'You must accept this',
    },
    plans: {
      label: 'Select a plan',
      free: 'Free - $0/month',
      pro: 'Pro - $9/month',
      enterprise: 'Enterprise - $99/month',
      helper: 'You can change your plan anytime',
    },
    layout: {
      label: 'Layout direction',
      vertical: 'Vertical',
      horizontal: 'Horizontal',
    },
  },
  pages: {
    utilityTest: {
      title: 'Utility Functions Test Page',
      subtitle: 'Interactive testing of validation and formatting functions',
      phone: {
        title: 'Phone Numbers',
        country: 'Country',
        type: 'Number type',
        placeholder: 'Enter phone number...',
        types: {
          mobile: 'Mobile',
          landline: 'Landline',
          fax: 'Fax',
        },
        results: {
          isMobile: 'Is mobile',
          isLandline: 'Is landline',
          formatted: 'Formatted',
          detectedType: 'Detected type',
        },
      },
      email: {
        title: 'Email Addresses',
        placeholder: 'Enter email...',
        results: {
          isValid: 'Is valid',
          normalized: 'Normalized',
          domain: 'Domain',
        },
      },
      date: {
        title: 'Dates',
        locale: 'Format',
        results: {
          formatted: 'Formatted',
          parsed: 'Parsed',
          converted: 'Converted',
        },
      },
      results: {
        title: 'Results',
        empty: '(empty)',
        invalid: '(invalid)',
      },
      examples: {
        title: 'Examples (click to try)',
      },
      info: {
        title: 'Information',
        description: 'This page demonstrates utility functions for validation and formatting. All functions support multiple countries and localizations.',
      },
    },
  },
  wizard: {
    step: 'Step',
    previous: '‚Üê Previous',
    next: 'Next ‚Üí',
    complete: 'Save',
  },
  debugBar: {
    totalTimeOnPage: 'Total time on page',
    timeSinceLastClick: 'Time since last action',
    clicks: 'Clicks',
    keys: 'Keys',
  },
};